-- MySQL Script generated by MySQL Workbench
-- Mon Mar 29 00:50:41 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema aabobyr_kurs_work
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema aabobyr_kurs_work
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `aabobyr_kurs_work` DEFAULT CHARACTER SET utf8 ;
USE `aabobyr_kurs_work` ;

-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`users` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`users` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `password_hash` CHAR(128) NULL DEFAULT NULL,
  `phone` BIGINT(12) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'Пользователи - системная таблица с паролями';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`user_profiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`user_profiles` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`user_profiles` (
  `users_user_id` INT UNSIGNED NOT NULL,
  `firstname` VARCHAR(255) NOT NULL,
  `middle_name` VARCHAR(90) NULL,
  `lastname` VARCHAR(255) NOT NULL,
  `birthday` DATETIME NOT NULL,
  `gender` ENUM('m', 'f') NULL,
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  `updated_at` DATETIME NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`users_user_id`),
  CONSTRAINT `fk_user_profiles_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `aabobyr_kurs_work`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Профили пользователей\n';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`order_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`order_status` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`order_status` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Статусы заказов';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`delivery_method`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`delivery_method` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`delivery_method` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(90) NULL,
  `blocked` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'Ставится при блокировке способа доставки\n',
  `delivery_adress` VARCHAR(190) NULL COMMENT 'адрес доставки, указывается для пунктов доставки или самовывоза. \nдля курьерской доставки оставляем пустым. \nВ идеале разные виды пунктов  лучше сделать отдельными таблицами',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Справочник способов доставки';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`orders` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`orders` (
  `order_id` INT NOT NULL AUTO_INCREMENT COMMENT 'id заказ',
  `user_id` INT UNSIGNED NOT NULL COMMENT 'код пользователя',
  `order_status_id` INT UNSIGNED NOT NULL,
  `is_payment` TINYINT(0) NOT NULL DEFAULT 0 COMMENT 'Заказа оплачен Да_нет',
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  `updated_at` DATETIME NOT NULL DEFAULT NOW(),
  `delivery_method_id` INT UNSIGNED NOT NULL,
  `order_summ` DECIMAL(10,2) UNSIGNED NULL COMMENT 'сумма заказа',
  PRIMARY KEY (`order_id`),
  INDEX `fk_orders_users1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_orders_order_status1_idx` (`order_status_id` ASC) VISIBLE,
  INDEX `fk_orders_delivery_method1_idx` (`delivery_method_id` ASC) VISIBLE,
  CONSTRAINT `fk_orders_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `aabobyr_kurs_work`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_order_status1`
    FOREIGN KEY (`order_status_id`)
    REFERENCES `aabobyr_kurs_work`.`order_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_delivery_method1`
    FOREIGN KEY (`delivery_method_id`)
    REFERENCES `aabobyr_kurs_work`.`delivery_method` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Заказы пользователей';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`vendors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`vendors` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`vendors` (
  `vendor_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `vendor_name` VARCHAR(45) NULL,
  PRIMARY KEY (`vendor_id`))
ENGINE = InnoDB
COMMENT = 'Справочник поставщиков';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`product_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`product_category` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`product_category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Категории товаров.\n\nздесь же могут быть добавлены признаки какие еще характеристики у продукта должны быть\n\n';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`manufacturer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`manufacturer` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`manufacturer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(90) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Изготовители';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`products` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`products` (
  `product_id` INT NOT NULL AUTO_INCREMENT,
  `product_name` VARCHAR(45) NULL,
  `category_id` INT NOT NULL,
  `manufacturer_id` INT NOT NULL,
  PRIMARY KEY (`product_id`),
  UNIQUE INDEX `id_UNIQUE` (`product_id` ASC) VISIBLE,
  INDEX `fk_products_Category1_idx` (`category_id` ASC) VISIBLE,
  INDEX `fk_products_manufacturer1_idx` (`manufacturer_id` ASC) VISIBLE,
  CONSTRAINT `fk_products_Category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `aabobyr_kurs_work`.`product_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_manufacturer1`
    FOREIGN KEY (`manufacturer_id`)
    REFERENCES `aabobyr_kurs_work`.`manufacturer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Основной справочник товаров для поиска';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`items` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`items` (
  `item_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `vendors_vendor_id` INT UNSIGNED NOT NULL,
  `products_product_id` INT NOT NULL,
  `item_name` VARCHAR(100) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`item_id`),
  UNIQUE INDEX `item_id_UNIQUE` (`item_id` ASC) VISIBLE,
  INDEX `fk_items_vendors1_idx` (`vendors_vendor_id` ASC) VISIBLE,
  INDEX `fk_items_products1_idx` (`products_product_id` ASC) VISIBLE,
  CONSTRAINT `fk_items_vendors1`
    FOREIGN KEY (`vendors_vendor_id`)
    REFERENCES `aabobyr_kurs_work`.`vendors` (`vendor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_items_products1`
    FOREIGN KEY (`products_product_id`)
    REFERENCES `aabobyr_kurs_work`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Товары для продажи';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`cart`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`cart` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`cart` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `items_item_id` INT UNSIGNED NOT NULL,
  `qty` BIGINT(7) NULL,
  `price` DECIMAL(7,2) NOT NULL,
  `summ` DECIMAL(9,2) NULL DEFAULT (qty * price),
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`id`, `user_id`),
  INDEX `fk_cart_items_idx` (`items_item_id` ASC) INVISIBLE,
  INDEX `fk_cart_users_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_cart_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `aabobyr_kurs_work`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cart_items`
    FOREIGN KEY (`items_item_id`)
    REFERENCES `aabobyr_kurs_work`.`items` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Корзина';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`favorites`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`favorites` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`favorites` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'уникальный номер записи',
  `users_user_id` INT UNSIGNED NOT NULL,
  `items_item_id` INT UNSIGNED NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT NOW() COMMENT 'дата и время  добавления',
  `is_delete` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'признак удаления\n',
  `updated_at` DATETIME NOT NULL DEFAULT NOW() COMMENT 'дата и время обновления ',
  PRIMARY KEY (`id`),
  INDEX `fk_favorites_items1_idx` (`items_item_id` ASC) VISIBLE,
  INDEX `fk_favorites_users1_idx` (`users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_favorites_items1`
    FOREIGN KEY (`items_item_id`)
    REFERENCES `aabobyr_kurs_work`.`items` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorites_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `aabobyr_kurs_work`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Избранное пользователя';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`warehouses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`warehouses` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`warehouses` (
  `warehouse_id` INT NOT NULL AUTO_INCREMENT,
  `vendors_vendor_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(70) NOT NULL,
  `adress` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`warehouse_id`),
  INDEX `fk_warehouses_vendors1_idx` (`vendors_vendor_id` ASC) VISIBLE,
  CONSTRAINT `fk_warehouses_vendors1`
    FOREIGN KEY (`vendors_vendor_id`)
    REFERENCES `aabobyr_kurs_work`.`vendors` (`vendor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Список складов';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`stocks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`stocks` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`stocks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `warehouses_warehouse_id` INT NOT NULL,
  `items_item_id` INT UNSIGNED NOT NULL,
  `qty` VARCHAR(45) NOT NULL COMMENT 'количество товара',
  PRIMARY KEY (`id`),
  INDEX `fk_stocks_items1_idx` (`items_item_id` ASC) INVISIBLE,
  INDEX `fk_stocks_warehouses1` (`warehouses_warehouse_id` ASC) VISIBLE,
  CONSTRAINT `fk_stocks_warehouses1`
    FOREIGN KEY (`warehouses_warehouse_id`)
    REFERENCES `aabobyr_kurs_work`.`warehouses` (`warehouse_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stocks_items1`
    FOREIGN KEY (`items_item_id`)
    REFERENCES `aabobyr_kurs_work`.`items` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Остатки на складах';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`feedback`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`feedback` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`feedback` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `users_user_id` INT UNSIGNED NOT NULL,
  `items_item_id` INT UNSIGNED NOT NULL,
  `text` TEXT NULL DEFAULT NULL,
  `rating` ENUM('1', '2', '3', '4', '5') NOT NULL COMMENT 'оценка от 1 до 5 ',
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_feedback_items1_idx` (`items_item_id` ASC) VISIBLE,
  INDEX `fk_feedback_users1_idx` (`users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_feedback_items1`
    FOREIGN KEY (`items_item_id`)
    REFERENCES `aabobyr_kurs_work`.`items` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_feedback_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `aabobyr_kurs_work`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'отзывы о товарах';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`user_delivery_method`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`user_delivery_method` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`user_delivery_method` (
  `user_id` INT UNSIGNED NOT NULL,
  `delivery_method_id` INT UNSIGNED NOT NULL,
  `delivery_adress` VARCHAR(160) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`user_id`, `delivery_method_id`),
  INDEX `fk_users_user_id` (`user_id` ASC) INVISIBLE,
  INDEX `fk_delivery_method_id` (`delivery_method_id` ASC) INVISIBLE,
  CONSTRAINT `fk_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `aabobyr_kurs_work`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_delivery_method_delivery_method1`
    FOREIGN KEY (`delivery_method_id`)
    REFERENCES `aabobyr_kurs_work`.`delivery_method` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Способы доставки пользователя';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`orders_line`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`orders_line` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`orders_line` (
  `orders_line_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `orders_order_id` INT NOT NULL,
  `items_item_id` INT UNSIGNED NOT NULL,
  `qty` BIGINT(7) NOT NULL,
  `item_price` DECIMAL(8,2) NOT NULL,
  `line_summ` DECIMAL(10,2) NULL DEFAULT (qty * item_price),
  `created_at` DATETIME NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NOW(),
  INDEX `order_id_idx` (`orders_order_id` ASC) VISIBLE,
  INDEX `item_id_idx` (`items_item_id` ASC) VISIBLE,
  PRIMARY KEY (`orders_line_id`),
  CONSTRAINT `item_id`
    FOREIGN KEY (`items_item_id`)
    REFERENCES `aabobyr_kurs_work`.`items` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `order_id`
    FOREIGN KEY (`orders_order_id`)
    REFERENCES `aabobyr_kurs_work`.`orders` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Строки заказов\n';


-- -----------------------------------------------------
-- Table `aabobyr_kurs_work`.`vendors_price`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aabobyr_kurs_work`.`vendors_price` ;

CREATE TABLE IF NOT EXISTS `aabobyr_kurs_work`.`vendors_price` (
  `items_item_id` INT UNSIGNED NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NULL,
  `price` DECIMAL(8,2) UNSIGNED NOT NULL COMMENT 'Цены поставщиков\nУникальным будет связка item_id и цена начала действия\nДата окончания может быть пустой\n\n',
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  `updated_at` DATETIME NOT NULL DEFAULT NOW(),
  INDEX `fk_table1_items1_idx` (`items_item_id` ASC) VISIBLE,
  PRIMARY KEY (`items_item_id`, `start_date`),
  CONSTRAINT `fk_table1_items1`
    FOREIGN KEY (`items_item_id`)
    REFERENCES `aabobyr_kurs_work`.`items` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `aabobyr_kurs_work`;

DELIMITER $$

USE `aabobyr_kurs_work`$$
DROP TRIGGER IF EXISTS `aabobyr_kurs_work`.`stocks_BEFORE_INSERT` $$
USE `aabobyr_kurs_work`$$
CREATE DEFINER = CURRENT_USER TRIGGER `aabobyr_kurs_work`.`stocks_BEFORE_INSERT` BEFORE INSERT ON `stocks` FOR EACH ROW
BEGIN
IF (SELECT vendors_vendor_id FROM items WHERE item_id = new.items_item_id) != (SELECT vendors_vendor_id FROM warehouses where warehouse_id = new.warehouses_warehouse_id) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Trigger Warning! vendor of item is and venrod for warehouse have to match';
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
